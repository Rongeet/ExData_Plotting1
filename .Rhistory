x <- 4L
class(x)
x <- 1:4;y <- 2
x+y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x[x<6]==0
x[x<5]<-0
x[x<5]<0
x[x>0]<6
x[x==6]<0
x[x%%1:5]<0
x[x%in%1:5]<0
x[x==0]<6
x[x<6]<0
x[x==0]<6
x[x>6]<0
x[x!=6]<0
X[X>=6]<0
x[x>=6]<0
x <- c(4, TRUE)
class(x)
x <- c(1,3, 5); y <- c(3, 2, 10)
rbind(x, y)
x <- c(4, TRUE)
class(x)
x <- 1:4; y <- 2:3
x+y
class(x+y)
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
x[x>0] <- 6
x
x[x<6]==0
x
x[x<=5] <-0
x
x[x!=6]<- 0
x
x[x < 6] == 0
x
x[x == 0] < 6
x
x[x < 6] <- 0
x
x[x == 0] <- 6
x
x[x == 6] <- 0
x
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x[x <= 5] <- 0
x
x[x != 6] <- 0
x
x[x == 0] < 6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x != 6] <- 0
x
x[x == 0] < 6
x
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] == 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x>0] <- 6
x
x[x>0] <- 6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x>0] <-6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x <= 5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x != 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] < 6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x < 6] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x %in% 1:5] <- 0
x
x <- c(3, 5, 1, 10, 12, 6)
x[x == 0] <- 6
x
x <- c(3, 5, 1, 10, 12, 6)
x[x == 6] <- 0
x
x <- c(4, TRUE)
class(x)
x
x <- 1:4  y <- 2:3
x <- 1:4;  y <- 2:3
x+y
class(x+y)
install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
swirl()
5+7
iris
installed packages()
install.packages()
library()
update.packages()
update.packages()
sessionInfo()
version
version()
version
sessionInfo()
library(dplyr)
filename <- "Coursera_DS3_Final.zip"
# Checking if archieve already exists.
if (!file.exists(filename)){
  fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
  download.file(fileURL, filename, method="curl")
}  
# Checking if folder exists
if (!file.exists("UCI HAR Dataset")) { 
  unzip(filename) 
}
features <- read.table("UCI HAR Dataset/features.txt", col.names = c("n","functions"))
activities <- read.table("UCI HAR Dataset/activity_labels.txt", col.names = c("code", "activity"))
subject_test <- read.table("UCI HAR Dataset/test/subject_test.txt", col.names = "subject")
x_test <- read.table("UCI HAR Dataset/test/X_test.txt", col.names = features$functions)
y_test <- read.table("UCI HAR Dataset/test/y_test.txt", col.names = "code")
subject_train <- read.table("UCI HAR Dataset/train/subject_train.txt", col.names = "subject")
x_train <- read.table("UCI HAR Dataset/train/X_train.txt", col.names = features$functions)
y_train <- read.table("UCI HAR Dataset/train/y_train.txt", col.names = "code")
X <- rbind(x_train, x_test)
Y <- rbind(y_train, y_test)
Subject <- rbind(subject_train, subject_test)
Merged_Data <- cbind(Subject, Y, X)
TidyData <- Merged_Data %>% select(subject, code, contains("mean"), contains("std"))
TidyData$code <- activities[TidyData$code, 2]
names(TidyData)[2] = "activity"
names(TidyData)<-gsub("Acc", "Accelerometer", names(TidyData))
names(TidyData)<-gsub("Gyro", "Gyroscope", names(TidyData))
names(TidyData)<-gsub("BodyBody", "Body", names(TidyData))
names(TidyData)<-gsub("Mag", "Magnitude", names(TidyData))
names(TidyData)<-gsub("^t", "Time", names(TidyData))
names(TidyData)<-gsub("^f", "Frequency", names(TidyData))
names(TidyData)<-gsub("tBody", "TimeBody", names(TidyData))
names(TidyData)<-gsub("-mean()", "Mean", names(TidyData), ignore.case = TRUE)
names(TidyData)<-gsub("-std()", "STD", names(TidyData), ignore.case = TRUE)
names(TidyData)<-gsub("-freq()", "Frequency", names(TidyData), ignore.case = TRUE)
names(TidyData)<-gsub("angle", "Angle", names(TidyData))
names(TidyData)<-gsub("gravity", "Gravity", names(TidyData))
FinalData <- TidyData %>%
    group_by(subject, activity) %>%
    summarise_all(funs(mean))
write.table(FinalData, "FinalData.txt", row.name=FALSE)
str(FinalData)
FinalData
q()
t <- read.table("household_power_consumption.txt", header=TRUE, sep=";", na.strings = "?", colClasses = c('character','character','numeric','numeric','numeric','numeric','numeric','numeric','numeric'))
t$Date <- as.Date(t$Date, "%d/%m/%Y")
t <- subset(t,Date >= as.Date("2007-2-1") & Date <= as.Date("2007-2-2"))
t <- t[complete.cases(t),]
dateTime <- paste(t$Date, t$Time)
dateTime <- setNames(dateTime, "DateTime")
t <- t[ ,!(names(t) %in% c("Date","Time"))]
t <- cbind(dateTime, t)
t$dateTime <- as.POSIXct(dateTime)
  hist(t$Global_active_power, main="Global Active Power", xlab = "Global Active Power (kilowatts)", col="red")
dev.copy(png,"plot1.png", width=480, height=480)
dev.off()
plot(t$Global_active_power~t$dateTime, type="l", ylab="Global Active Power (kilowatts)", xlab="")
dev.copy(png,"plot2.png", width=480, height=480)
dev.off()
 with(t, {
    plot(Sub_metering_1~dateTime, type="l",
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~dateTime,col='Red')
    lines(Sub_metering_3~dateTime,col='Blue')
  })
  legend("topright", col=c("black", "red", "blue"), lwd=c(1,1,1), 
         c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
Saving to file
  #dev.copy(png, file="plot3.png", height=480, width=480)
  #dev.off()
dev.copy(png, file="plot3.png", height=480, width=480)
dev.off()
par(mfrow=c(2,2), mar=c(4,4,2,1), oma=c(0,0,2,0))
  with(t, {
    plot(Global_active_power~dateTime, type="l", 
         ylab="Global Active Power (kilowatts)", xlab="")
    plot(Voltage~dateTime, type="l", 
         ylab="Voltage (volt)", xlab="")
    plot(Sub_metering_1~dateTime, type="l", 
         ylab="Global Active Power (kilowatts)", xlab="")
    lines(Sub_metering_2~dateTime,col='Red')
    lines(Sub_metering_3~dateTime,col='Blue')
    legend("topright", col=c("black", "red", "blue"), lty=1, lwd=2, bty="n",
           legend=c("Sub_metering_1", "Sub_metering_2", "Sub_metering_3"))
    plot(Global_reactive_power~dateTime, type="l", 
         ylab="Global Rective Power (kilowatts)",xlab="")
  })
dev.copy(png, file="plot4.png", height=480, width=480)
dev.off()
q()
